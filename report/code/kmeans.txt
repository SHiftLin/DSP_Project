# 输入：d（n*n的DTW距离矩阵），K（聚类数），round（迭代次数，默认为5000）
# 输出：K个类的中心

function kmeans(d, K, round)
    n = length(d)
    cluster = Array[0 .. K-1][0 .. n-1] # 每个类包含的样本编号
    cnt = Array[0 .. K-1] # 每个类的大小
    随机初始化K个中心centers[0..K-1]

    for r = 1 to round do
        for k = 0 to K-1 do
            cluster[k][0] = centers[k]
            cnt[k] = 1;
        for i = 0 to n-1 do # 把每个样本分配到离它最近的中心
            d_min = infinite
            c = 0
            for k = 0 to K-1 do
                if d[i][centers[k]] < d_min then
                    d_min = d[i][centers[k]]
                    c = k
            cluster[c][cnt[c]] = i;
            cnt[c] = cnt[c] + 1

        for k = 0 to K-1 do # 求每个类新的中心
            d_min = infinite 
            center = cluster[k][0];
            for i = 0 to cnt[k]-1 do
            # 找到使得d_sum最小的样本作为新中心
                d_sum = 0
                for j = 0 to cnt[k]-1 do
                    d_sum = d_sum + d[cluster[k][i]][cluster[k][j]]
                if d_sum < d_min then
                    d_min = d_sum
                    center = i
            centers[k] = center
    return centers
